from xml.dom.minidom import parse
from eng_models.models import Vulnerability_Model, Vulnerability_Function, Building_Taxonomy
from django.utils import timezone


def start(object):

	model = parse(object.xml)

	model_info_tags = model.getElementsByTagName('discreteVulnerabilitySet')

	for imt_tag in model_info_tags:
		
		object.asset_category = imt_tag.getAttribute('assetCategory')
		object.loss_category = imt_tag.getAttribute('lossCategory')

		iml = imt_tag.getElementsByTagName('IML')[0]
		imt = iml.getAttribute('IMT')
		if imt.startswith("SA"):
			sa_period = imt.split('(')[1].split(')')[0]
			imt = 'SA'
		else:
			sa_period = None

		#object.imt = imt
		#object.sa_period = sa_period

		iml_values = iml.firstChild.nodeValue.split()
		object.iml = iml_values

		object.save()


		functions = imt_tag.getElementsByTagName('discreteVulnerability')

		for function in functions:
			taxonomy_name = function.getAttribute('vulnerabilityFunctionID')
			taxonomy = Building_Taxonomy.objects.get(source=object.taxonomy_source, name=taxonomy_name)

			probabilistic_distribution = function.getAttribute('probabilisticDistribution')

			loss_ratio = function.getElementsByTagName('lossRatio')[0].firstChild.nodeValue.split()
			coefficients_variation = function.getElementsByTagName('coefficientsVariation')[0].firstChild.nodeValue.split()

			print type(object)
			vul_function = Vulnerability_Function(model=object,
												taxonomy=taxonomy,
												probabilistic_distribution=probabilistic_distribution,
												loss_ratio=loss_ratio,
												coefficients_variation=coefficients_variation,
												imt = imt,
												sa_period = sa_period)
			vul_function.save()
